name: Sample Pipeline

on:
    #push:
    workflow_dispatch: 

jobs:
    build-on-docker:
        # if: github.ref == 'ref/heads/develop'
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.11", "3.12"]
            fail-fast: false
            max-parallel: 2
        steps:
            - uses: actions/checkout@v4
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - uses: docker/build-push-action@v6
              with:
                tags: ${{ vars.DOCKER_USERNAME}}/github-actions:${{ matrix.python-version }}
                context: .
                build-args: |
                  PYTHON_VERSION=${{ matrix.python-version }}
                
            # - name: Check if docker exists 
            #   run: |
            #     docker --version
            # - name: Create Docker image
            #   run: |
            #     docker build -t my-app:${{ matrix.python-version }} --build-arg PYTHON_VERSION=${{ matrix.python-version }} .
            #     docker images 
            - name: Test docker image
              run: |
                docker run -itd -p 8501:8501 my-app:${{ matrix.python-version}}
                sleep 20
                docker ps 
                wget localhost:8501
                cat index.html
            - uses: docker/build-push-action@v6
              with:
                tags: ${{ vars.DOCKER_USERNAME}}/github-actions:${{ matrix.python-version }}
                context: .
                push: true
                build-args: |
                  PYTHON_VERSION=${{ matrix.python-version }}
    
    
    # python_lint:
    #   needs: build-on-docker
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4

    #     - name: Setup Pylint and pyflakes
    #       uses: actions/setup-python@v5
    #       with:
    #         python-version: '3.12'

    #     - name: Run pylint and pyfalkes
    #       run: |
    #         python -m pip install --upgrade pip 
    #         pip install -r requirements.txt
    #         pip install flake8 pylint 
    #         pylint  main.py
    #         flake8 main.py
         
